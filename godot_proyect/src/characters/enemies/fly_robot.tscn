[gd_scene load_steps=17 format=2]

[ext_resource path="res://src/characters/enemies/enemy.tscn" type="PackedScene" id=1]
[ext_resource path="res://src/characters/enemies/fly_robot.gd" type="Script" id=2]
[ext_resource path="res://resources/characters/enemies/fly_robot_masks.tres" type="SpriteFrames" id=3]
[ext_resource path="res://assets/sprites/characters/enemies/fly_robot/fly_robot_propeller_mask_0.png" type="Texture" id=4]
[ext_resource path="res://assets/sprites/characters/enemies/fly_robot/fly_robot_propeller_mask_1.png" type="Texture" id=5]
[ext_resource path="res://assets/sprites/characters/enemies/fly_robot/fly_robot_propeller_mask_2.png" type="Texture" id=6]
[ext_resource path="res://assets/sprites/characters/enemies/fly_robot/fly_robot_propeller_mask_3.png" type="Texture" id=7]
[ext_resource path="res://assets/sprites/characters/enemies/fly_robot/fly_robot_body_mask_0.png" type="Texture" id=8]
[ext_resource path="res://assets/sprites/characters/enemies/fly_robot/fly_robot_body_mask_2.png" type="Texture" id=9]
[ext_resource path="res://assets/sprites/characters/enemies/fly_robot/fly_robot_body_mask_1.png" type="Texture" id=10]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

//The palette used
uniform sampler2D palette;
//how many horizontal pixels has the palette
uniform float palette_size;
//Mask for wich color use from palette
uniform sampler2D mask;

void fragment() {
	vec4 mask_color = texture(mask,UV);
	vec4 output = texture(TEXTURE,UV);
	if(mask_color.r != 1.0)
	{
		highp float color_r = mask_color.r;
		//If an inconsistency appears between Intel and Amd/Nvidia, feel free to fix it and commit, but take this as a warning for production use
		output = texture(palette,vec2((color_r*255.0+0.5)/255.0,0.0));
	}
	COLOR.rgba = output;
}
"

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/palette_size = 8.0

[sub_resource type="ShaderMaterial" id=3]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/palette_size = 8.0

[sub_resource type="SpriteFrames" id=4]
resource_local_to_scene = true
animations = [ {
"frames": [ ExtResource( 8 ), ExtResource( 9 ), ExtResource( 10 ) ],
"loop": true,
"name": "body_charging",
"speed": 8.0
}, {
"frames": [ ExtResource( 4 ), ExtResource( 5 ), ExtResource( 6 ), ExtResource( 7 ) ],
"loop": true,
"name": "propeller",
"speed": 10.0
}, {
"frames": [ ExtResource( 8 ) ],
"loop": true,
"name": "body_iddle",
"speed": 5.0
} ]

[sub_resource type="SpriteFrames" id=5]
resource_local_to_scene = true
animations = [ {
"frames": [ ExtResource( 8 ), ExtResource( 9 ), ExtResource( 10 ) ],
"loop": true,
"name": "body_charging",
"speed": 8.0
}, {
"frames": [ ExtResource( 4 ), ExtResource( 5 ), ExtResource( 6 ), ExtResource( 7 ) ],
"loop": true,
"name": "propeller",
"speed": 10.0
}, {
"frames": [ ExtResource( 8 ) ],
"loop": true,
"name": "body_iddle",
"speed": 5.0
} ]

[sub_resource type="RectangleShape2D" id=6]
extents = Vector2( 10.5, 18 )

[node name="FlyRobot" instance=ExtResource( 1 )]
script = ExtResource( 2 )
snd_hit = NodePath("SndHit")
snd_shoot = NodePath("SndShoot")
invencibility_time = 0.5
life_time = 10.0
life_flicker_time = 8.0
flicker_on_hit = true
flicker_before_timeout = false
dissapear_on_timeout = false
DAMAGE_MULTIPLIERS = {
0: 1,
1: 1,
2: 1,
3: 1,
4: 1,
5: 1,
6: 1,
7: 1,
8: 1
}
masks = ExtResource( 3 )
move_speed = 200.0
invert_dir = false
rotate_towards_destination = true
_follow_megaship_at_ready = true
follow_max_distance = 500.0
dynamic_dir = true
drifting = 0.0
drop_chance = 0.5
damage = 6.0
shooting_cd = 0.05
bullet = null
cannon_pos = [ [ Vector2( 0, 0 ) ] ]
bullet_max = 3
n_cannons = 1
hp_max = 14.0
_hp_bar_position = Vector2( 16, -11 )

[node name="SprBody" type="Sprite" parent="." index="5"]
material = SubResource( 2 )
z_index = -1

[node name="SprPropeller" type="Sprite" parent="." index="6"]
material = SubResource( 3 )

[node name="AnimBody" type="AnimatedSprite" parent="." index="7"]
visible = false
z_index = -1
frames = SubResource( 4 )
animation = "body_iddle"
playing = true

[node name="AnimPropeller" type="AnimatedSprite" parent="." index="8"]
visible = false
frames = SubResource( 5 )
animation = "propeller"
frame = 2
playing = true

[node name="CollisionBox" type="CollisionShape2D" parent="." index="9"]
position = Vector2( -0.5, 1 )
shape = SubResource( 6 )
